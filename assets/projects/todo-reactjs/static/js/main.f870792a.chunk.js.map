{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","marginBottom","padding","border","borderRadius","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","Modal","state","isOpen","Fragment","textAlign","setState","this","Component","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","Loader","length","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f870792a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\nconst styles ={\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '.5rem',\r\n        padding: '.5rem 1rem',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '5px'\r\n    },\r\n    input: {\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n    const { removeTodo } = useContext(Context)\r\n    const classes = []\r\n\r\n    if (todo.completed) {\r\n        classes.push('done')\r\n    }\r\n\r\n    return (\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input\r\n                    type='checkbox'\r\n                    checked={todo.completed}\r\n                    style={styles.input}\r\n                    onChange={() => onChange(todo.id)}\r\n                />\r\n                <strong>{index + 1}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n\r\n            <button className='btn' onClick={removeTodo.bind(null, todo.id)}>\r\n                &times;\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todos.map((todo, index) => {\r\n                return <TodoItem\r\n                    todo={todo}\r\n                    key={todo.id}\r\n                    index={index}\r\n                    onChange={props.onToggle}\r\n                />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\n\r\nexport default () => <div style={{display: 'flex', justifyContent: 'center', margin: '1rem'}}>\r\n    <div className='loader'><div></div><div></div><div></div><div></div></div>\r\n</div>","import React from 'react'\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{textAlign: 'center'}}>\r\n                        <button className = 'btn' style = {{ marginBottom: '2.5rem' }} onClick={() => this.setState({ isOpen: true })}>Open modal</button>\r\n                </div>\r\n                \r\n                {this.state.isOpen && (\r\n                    <div className='modal'>\r\n                        <div className='modal-body'>\r\n                            <h2>Modal title</h2>\r\n                            <p>I am modal</p>\r\n                            <button className='btn' onClick={() => this.setState({ isOpen: false })}>Close modal</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport TodoList from './Todo/TodoList'\r\nimport Context from './context'\r\nimport Loader from './Loader'\r\nimport Modal from './Modal/Modal'\r\n\r\nconst AddTodo = React.lazy(() => new Promise(resolve => {\r\n    setTimeout(() => {\r\n        resolve(import('./Todo/AddTodo'))\r\n    }, 4000)\r\n}))\r\n\r\nfunction App() {\r\n    const [todos, setTodos] = React.useState([])\r\n    const [loading, setLoading] = React.useState(true)\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\r\n            .then(response => response.json())\r\n            .then(todos => {\r\n                setTimeout(() => {\r\n                    setLoading(false)\r\n                    setTodos(todos)\r\n                }, 2000)\r\n            })\r\n    }, [])\r\n\r\n    function toggleTodo(id) {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n\r\n    function removeTodo(id) {\r\n        setTodos(todos.filter(todo => todo.id !== id))\r\n    }\r\n\r\n    function addTodo(title) {\r\n        setTodos(\r\n            todos.concat([\r\n                {\r\n                    id: Date.now(),\r\n                    title,\r\n                    completed: false\r\n                }\r\n            ])\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{ removeTodo }}>\r\n            <div className=\"wrapper\">\r\n                <h1>ReactJS ToDo</h1>\r\n                <Modal />\r\n\r\n                <React.Suspense fallback={<p style={{textAlign: 'center'}}>Loading..</p>}>\r\n                    <AddTodo onCreate={addTodo} />\r\n                </React.Suspense>\r\n\r\n                {loading && <Loader />}\r\n\r\n                {todos.length ? (\r\n                    <TodoList todos={todos} onToggle={toggleTodo} />\r\n                ) : loading ? null : (\r\n                    <p>No ToDos</p>\r\n                )}\r\n\r\n                <p className=\"copy\">Developed by <a href=\"https://tsybulska.github.io/\">Olena Tsybulska</a></p>\r\n            </div>\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}