"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}function _createClass(t,e,n){return e&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),t}var $start=document.querySelector(".start-btn"),$first=document.querySelector(".fighter-first"),$second=document.querySelector(".fighter-second"),$battle=document.querySelector(".battle__body"),$steps=document.querySelector(".battle__steps"),gameSteps=0,win=0,lose=0,Fighter=function(){function t(e){_classCallCheck(this,t),this.name=e.name,this.damage=e.damage,this.totalHp=e.hp,this.strength=e.strength,this.agility=e.agility,this.currentHp=e.hp,this.win,this.lose}return _createClass(t,[{key:"getName",value:function(){return this.name}},{key:"getDamage",value:function(){return this.damage}},{key:"setHealth",value:function(){return this.currentHp=this.totalHp}},{key:"getHealth",value:function(){return this.currentHp}},{key:"getStrength",value:function(){return this.strength}},{key:"getAgility",value:function(){return this.agility}},{key:"attack",value:function(t){var e=t.getStrength()+t.getAgility();if(100*Math.random()>e){t.dealDamage(this.damage);var n=document.createElement("p");n.innerHTML="".concat(this.name," makes ").concat(this.damage," damage to ").concat(t.getName()),$battle.appendChild(n)}else{var a=document.createElement("p");a.innerHTML="".concat(this.name," attack missed"),$battle.appendChild(a)}}},{key:"logStats",value:function(){this.name===firstFighter.name&&($first.querySelector(".fighter__name").textContent=this.name,$first.querySelector(".fighter__damage").textContent=this.damage,$first.querySelector(".fighter__strength").textContent=this.strength,$first.querySelector(".fighter__agility").textContent=this.agility,$first.querySelector(".fighter__hp").textContent=this.currentHp),this.name===secondFighter.name&&($second.querySelector(".fighter__name").textContent=this.name,$second.querySelector(".fighter__damage").textContent=this.damage,$second.querySelector(".fighter__strength").textContent=this.strength,$second.querySelector(".fighter__agility").textContent=this.agility,$second.querySelector(".fighter__hp").textContent=this.currentHp)}},{key:"heal",value:function(t){this.currentHp=this.currentHp>=this.totalHp?this.totalHp:this.currentHp+t}},{key:"dealDamage",value:function(t){this.currentHp=this.currentHp-t<0?0:this.currentHp-t}},{key:"addWin",value:function(){win++}},{key:"addLose",value:function(){lose++}}]),t}();function startBattle(){gameSteps++,$steps.innerHTML="".concat(gameSteps),$battle.innerHTML="",firstFighter.setHealth(),secondFighter.setHealth(),firstFighter.logStats(),secondFighter.logStats(),battle(firstFighter,secondFighter)}function battle(t,e){for(;t.getHealth()>0&&e.getHealth()>0;)t.attack(e),e.getHealth()>0&&e.attack(t);endBattle(t,e)}function endBattle(t,e){var n=0===t.getHealth()?e:t;(0===t.getHealth()?t:e).addLose(),n.addWin();var a=document.createElement("p");a.innerHTML="".concat(n.getName()," has won!"),$battle.appendChild(a)}var firstFighter=new Fighter({name:"First Fighter",damage:25,hp:100,strength:30,agility:25,win:0,lose:0}),secondFighter=new Fighter({name:"Second Fighter",damage:20,hp:90,strength:20,agility:15,win:0,lose:0});$start.addEventListener("click",startBattle),svg4everybody();